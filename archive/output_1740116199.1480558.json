{"content": {"suites": {"0": {"status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 10}, "tests": {"0": {"status": "ERROR", "message": "request = <SubRequest 'driver' for <Function test_landing_page>>\n\n    @pytest.fixture(autouse=True, scope=\"class\")\n    def driver(request):\n        options = webdriver.ChromeOptions()\n        if request.config.getoption(\"--headless\"):\n            options.add_argument(\"--headless\")\n        options.add_argument(\"--start-maximized\")\n    \n>       service = Service(ChromeDriverManager().install())  # Auto-manages ChromeDriver\nE       NameError: name 'Service' is not defined\n\nconftest.py:16: NameError\n", "test_name": "test_landing_page", "rerun": "0"}, "1": {"status": "ERROR", "message": "request = <SubRequest 'driver' for <Function test_landing_page>>\n\n    @pytest.fixture(autouse=True, scope=\"class\")\n    def driver(request):\n        options = webdriver.ChromeOptions()\n        if request.config.getoption(\"--headless\"):\n            options.add_argument(\"--headless\")\n        options.add_argument(\"--start-maximized\")\n    \n>       service = Service(ChromeDriverManager().install())  # Auto-manages ChromeDriver\nE       NameError: name 'Service' is not defined\n\nconftest.py:16: NameError\n", "test_name": "test_redirection_to_flights_page", "rerun": "0"}, "2": {"status": "ERROR", "message": "request = <SubRequest 'driver' for <Function test_landing_page>>\n\n    @pytest.fixture(autouse=True, scope=\"class\")\n    def driver(request):\n        options = webdriver.ChromeOptions()\n        if request.config.getoption(\"--headless\"):\n            options.add_argument(\"--headless\")\n        options.add_argument(\"--start-maximized\")\n    \n>       service = Service(ChromeDriverManager().install())  # Auto-manages ChromeDriver\nE       NameError: name 'Service' is not defined\n\nconftest.py:16: NameError\n", "test_name": "test_removing_already_filled_field", "rerun": "0"}, "3": {"status": "ERROR", "message": "request = <SubRequest 'driver' for <Function test_landing_page>>\n\n    @pytest.fixture(autouse=True, scope=\"class\")\n    def driver(request):\n        options = webdriver.ChromeOptions()\n        if request.config.getoption(\"--headless\"):\n            options.add_argument(\"--headless\")\n        options.add_argument(\"--start-maximized\")\n    \n>       service = Service(ChromeDriverManager().install())  # Auto-manages ChromeDriver\nE       NameError: name 'Service' is not defined\n\nconftest.py:16: NameError\n", "test_name": "test_input_in_origin_field", "rerun": "0"}, "4": {"status": "ERROR", "message": "request = <SubRequest 'driver' for <Function test_landing_page>>\n\n    @pytest.fixture(autouse=True, scope=\"class\")\n    def driver(request):\n        options = webdriver.ChromeOptions()\n        if request.config.getoption(\"--headless\"):\n            options.add_argument(\"--headless\")\n        options.add_argument(\"--start-maximized\")\n    \n>       service = Service(ChromeDriverManager().install())  # Auto-manages ChromeDriver\nE       NameError: name 'Service' is not defined\n\nconftest.py:16: NameError\n", "test_name": "test_input_in_destination_field", "rerun": "0"}, "5": {"status": "ERROR", "message": "request = <SubRequest 'driver' for <Function test_landing_page>>\n\n    @pytest.fixture(autouse=True, scope=\"class\")\n    def driver(request):\n        options = webdriver.ChromeOptions()\n        if request.config.getoption(\"--headless\"):\n            options.add_argument(\"--headless\")\n        options.add_argument(\"--start-maximized\")\n    \n>       service = Service(ChromeDriverManager().install())  # Auto-manages ChromeDriver\nE       NameError: name 'Service' is not defined\n\nconftest.py:16: NameError\n", "test_name": "test_select_dates", "rerun": "0"}, "6": {"status": "ERROR", "message": "request = <SubRequest 'driver' for <Function test_landing_page>>\n\n    @pytest.fixture(autouse=True, scope=\"class\")\n    def driver(request):\n        options = webdriver.ChromeOptions()\n        if request.config.getoption(\"--headless\"):\n            options.add_argument(\"--headless\")\n        options.add_argument(\"--start-maximized\")\n    \n>       service = Service(ChromeDriverManager().install())  # Auto-manages ChromeDriver\nE       NameError: name 'Service' is not defined\n\nconftest.py:16: NameError\n", "test_name": "test_search_flights", "rerun": "0"}, "7": {"status": "ERROR", "message": "request = <SubRequest 'driver' for <Function test_landing_page>>\n\n    @pytest.fixture(autouse=True, scope=\"class\")\n    def driver(request):\n        options = webdriver.ChromeOptions()\n        if request.config.getoption(\"--headless\"):\n            options.add_argument(\"--headless\")\n        options.add_argument(\"--start-maximized\")\n    \n>       service = Service(ChromeDriverManager().install())  # Auto-manages ChromeDriver\nE       NameError: name 'Service' is not defined\n\nconftest.py:16: NameError\n", "test_name": "test_alternate_dates", "rerun": "0"}, "8": {"status": "ERROR", "message": "request = <SubRequest 'driver' for <Function test_landing_page>>\n\n    @pytest.fixture(autouse=True, scope=\"class\")\n    def driver(request):\n        options = webdriver.ChromeOptions()\n        if request.config.getoption(\"--headless\"):\n            options.add_argument(\"--headless\")\n        options.add_argument(\"--start-maximized\")\n    \n>       service = Service(ChromeDriverManager().install())  # Auto-manages ChromeDriver\nE       NameError: name 'Service' is not defined\n\nconftest.py:16: NameError\n", "test_name": "test_error_in_empty_field", "rerun": "0"}, "9": {"status": "ERROR", "message": "request = <SubRequest 'driver' for <Function test_landing_page>>\n\n    @pytest.fixture(autouse=True, scope=\"class\")\n    def driver(request):\n        options = webdriver.ChromeOptions()\n        if request.config.getoption(\"--headless\"):\n            options.add_argument(\"--headless\")\n        options.add_argument(\"--start-maximized\")\n    \n>       service = Service(ChromeDriverManager().install())  # Auto-manages ChromeDriver\nE       NameError: name 'Service' is not defined\n\nconftest.py:16: NameError\n", "test_name": "test_no_flights_available", "rerun": "0"}}, "suite_name": "tests/test_booking.py"}}}, "date": "February 21, 2025", "start_time": 1740116181.3865175, "total_suite": 1, "status": "FAIL", "status_list": {"pass": "0", "fail": "0", "skip": "0", "error": "10", "xpass": "0", "xfail": "0", "rerun": "0"}, "total_tests": "10"}